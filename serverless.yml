service: hidefaces-server

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-step-functions

package:
  individually: true

custom:
  AccountId: !Ref AWS::AccountId
  esbuild:
    target: node12
    exclude:
      - sharp
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}
  myProfile:
    prod: general-prod
    dev: general-dev
  useDotenv: true
  mainBucketName:
    Fn::Join:
      - "-"
      - - ${self:custom.prefix}
        - !Ref AWS::AccountId
        - "main"
  ffmpegLayer:
    Fn::Join:
      - ":"
      - - "arn:aws:lambda:eu-west-1"
        - !Ref AWS::AccountId
        - "layer:ffmpeg:1"
  sharpLayer:
    Fn::Join:
      - ":"
      - - "arn:aws:lambda:eu-west-1"
        - !Ref AWS::AccountId
        - "layer:sharp:1"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: ${self:custom.myProfile.${self:custom.stage}}
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true
  environment:
    STAGE: ${self:custom.stage}
    MAIN_TABLE_NAME: ${self:custom.prefix}-main
    MAIN_BUCKET_NAME: ${self:custom.mainBucketName}
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    STATE_MACHINE_ARN:
      Fn::GetAtt: [SMHideFacesOnVideo, Arn]
  iamRoleStatements:
    - ${file(resources/common.yml):lambdaPolicyDynamoDBMain}
    - ${file(resources/common.yml):lambdaPolicyS3MainVideos}
    - ${file(resources/common.yml):lambdaPolicyStateMachineVideo}
    - ${file(resources/common.yml):lambdaPolicyRekognition}
    - ${file(resources/common.yml):lambdaPolicySES}
    - ${file(resources/common.yml):lambdaPolicyXRay}

functions:
  payment:
    handler: src/lambdas/payment.handler
    events:
      - http:
          path: payment
          method: post
          cors: true
  videoStateMachineTrigger:
    handler: src/lambdas/webhook.handler
    events:
      - http:
          path: webhook
          method: post
          cors: true
  checkVideoSource:
    handler: src/lambdas/SMHideFacesOnVideo/checkVideoSource.handler
    memorySize: 1792
    timeout: 500
    layers:
      - ${self:custom.ffmpegLayer}
  explodeVideo:
    handler: src/lambdas/SMHideFacesOnVideo/explodeVideo.handler
    memorySize: 1792
    timeout: 500
    layers:
      - ${self:custom.ffmpegLayer}
  getFacesData:
    handler: src/lambdas/SMHideFacesOnVideo/getFacesData.handler
    timeout: 500
  blurAllFrames1:
    handler: src/lambdas/SMHideFacesOnVideo/blurAllFrames1.handler
    memorySize: 3008
    timeout: 900
    layers:
      - ${self:custom.sharpLayer}
  blurAllFrames2:
    handler: src/lambdas/SMHideFacesOnVideo/blurAllFrames2.handler
    memorySize: 3008
    timeout: 900
    layers:
      - ${self:custom.sharpLayer}
  makeNewVideo:
    handler: src/lambdas/SMHideFacesOnVideo/makeNewVideo.handler
    memorySize: 1792
    timeout: 500
    layers:
      - ${self:custom.ffmpegLayer}
  notifySuccess:
    handler: src/lambdas/SMHideFacesOnVideo/notifySuccess.handler
  notifyError:
    handler: src/lambdas/SMHideFacesOnVideo/notifyError.handler

stepFunctions:
  validate: true
  stateMachines:
    SMHideFacesOnVideo:
      id: SMHideFacesOnVideo
      definition: ${file(src/lambdas/SMHideFacesOnVideo/video-step-functions.yml)}

resources:
  - ${file(resources/dynamodb-tables.yml)}
  - ${file(resources/s3-buckets.yml)}
  - ${file(resources/api-gateway-errors.yml)}

  - Outputs:
      SMHideFacesOnVideo:
        Description: The ARN of the SMHideFacesOnVideo state machine
        Value:
          Ref: SMHideFacesOnVideo
      MainTableName:
        Description: Name of the MainTable
        Value:
          Ref: MainTable
      MainBucketName:
        Description: Name of the MainBucketName
        Value:
          Ref: MainBucket
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiId
      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiRootResourceId
