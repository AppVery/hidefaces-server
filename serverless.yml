service: hidefaces-server

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-step-functions

package:
  individually: true

custom: ${file(resources/common.yml):custom}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: ${self:custom.myProfile.${self:custom.stage}}
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true
  environment:
    STAGE: ${self:custom.stage}
    MAIN_TABLE_NAME: ${self:custom.prefix}-main
    MAIN_BUCKET_NAME: ${self:custom.prefix}-main
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
  iamRoleStatements:
    - ${file(resources/common.yml):lambdaPolicyDynamoDBMain}
    - ${file(resources/common.yml):lambdaPolicyS3MainVideos}
    - ${file(resources/common.yml):lambdaPolicySES}
    - ${file(resources/common.yml):lambdaPolicyXRay}

functions:
  payment:
    handler: src/lambdas/payment.handler
    events:
      - http:
          path: payment
          method: post
          cors: true
  addSignup:
    handler: src/lambdas/stepFunctionLambdas/addSignup.handler
  getSignup:
    handler: src/lambdas/stepFunctionLambdas/getSignup.handler
  sendReminderEmail:
    handler: src/lambdas/stepFunctionLambdas/sendReminderEmail.handler

stepFunctions:
  validate: true
  stateMachines:
    reminderEmail:
      name: reminderEmail
      events:
        - http:
            path: signup-with-reminders
            method: POST
            cors: true
      definition: ${file(resources/step-functions.yml)}

resources:
  - ${file(resources/dynamodb-tables.yml)}
  - ${file(resources/s3-buckets.yml)}
  - ${file(resources/api-gateway-errors.yml)}

  - Outputs:
      MainTableName:
        Description: Name of the MainTable
        Value:
          Ref: MainTable
      MainBucketName:
        Description: Name of the MainBucketName
        Value:
          Ref: MainBucket
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiId
      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiRootResourceId
