service: hidefaces-server

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-step-functions

package:
  individually: true

custom: ${file(resources/common.yml):custom}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: ${self:custom.myProfile.${self:custom.stage}}
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
    lambda: true
  environment:
    STAGE: ${self:custom.stage}
    MAIN_TABLE_NAME: ${self:custom.prefix}-main
    MAIN_BUCKET_NAME: ${self:custom.prefix}-main
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    STATE_MACHINE_ARN:
      Fn::GetAtt: [SMHideFacesOnVideo, Arn]
  iamRoleStatements:
    - ${file(resources/common.yml):lambdaPolicyDynamoDBMain}
    - ${file(resources/common.yml):lambdaPolicyS3MainVideos}
    - ${file(resources/common.yml):lambdaPolicyStateMachineVideo}
    - ${file(resources/common.yml):lambdaPolicySES}
    - ${file(resources/common.yml):lambdaPolicyXRay}

functions:
  payment:
    handler: src/lambdas/payment.handler
    events:
      - http:
          path: payment
          method: post
          cors: true
  videoStateMachineTrigger:
    handler: src/lambdas/videoUploaded.handler
    events:
      - s3:
          bucket: ${self:custom.prefix}-main
          event: s3:ObjectCreated:Put
          rules:
            - prefix: videos/source/
          existing: true
  getVideoMetadata:
    handler: src/lambdas/SMHideFacesOnVideo/getVideoMetadata.handler
    layers:
      - ${self:custom.ffmpegLayer}
  explodeVideo:
    handler: src/lambdas/SMHideFacesOnVideo/explodeVideo.handler
    timeout: 600
    layers:
      - ${self:custom.ffmpegLayer}
  getFacesData:
    handler: src/lambdas/SMHideFacesOnVideo/getFacesData.handler
  mapAllFrames:
    handler: src/lambdas/SMHideFacesOnVideo/mapAllFrames.handler
  blurAllFrames:
    handler: src/lambdas/SMHideFacesOnVideo/blurAllFrames.handler
    timeout: 600
  makeNewVideo:
    handler: src/lambdas/SMHideFacesOnVideo/makeNewVideo.handler
    timeout: 600
    layers:
      - ${self:custom.ffmpegLayer}
  sendEmail:
    handler: src/lambdas/SMHideFacesOnVideo/sendEmail.handler

stepFunctions:
  validate: true
  stateMachines:
    SMHideFacesOnVideo:
      id: SMHideFacesOnVideo
      definition: ${file(src/lambdas/SMHideFacesOnVideo/video-step-functions.yml)}

resources:
  - ${file(resources/dynamodb-tables.yml)}
  - ${file(resources/s3-buckets.yml)}
  - ${file(resources/api-gateway-errors.yml)}

  - Outputs:
      SMHideFacesOnVideo:
        Description: The ARN of the SMHideFacesOnVideo state machine
        Value:
          Ref: SMHideFacesOnVideo
      MainTableName:
        Description: Name of the MainTable
        Value:
          Ref: MainTable
      MainBucketName:
        Description: Name of the MainBucketName
        Value:
          Ref: MainBucket
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiId
      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        Export:
          Name: ${self:custom.prefix}-ApiGatewayRestApiRootResourceId
