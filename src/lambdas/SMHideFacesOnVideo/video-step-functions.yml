Comment: A step functions to hide faces on a video
StartAt: Try
States:
  Try:
    Type: Parallel
    Branches:
      - StartAt: checkVideoSource
        States:
          checkVideoSource:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                {
                  "Fn::Join":
                    [
                      ":",
                      [
                        "arn:aws:lambda:eu-west-1",
                        { "Ref": "AWS::AccountId" },
                        "function:${self:service}-${self:provider.stage}-checkVideoSource",
                      ],
                    ],
                }
              Payload:
                Input.$: "$"
            Next: explodeVideo
          explodeVideo:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                {
                  "Fn::Join":
                    [
                      ":",
                      [
                        "arn:aws:lambda:eu-west-1",
                        { "Ref": "AWS::AccountId" },
                        "function:${self:service}-${self:provider.stage}-explodeVideo",
                      ],
                    ],
                }
              Payload:
                Input.$: "$"
            Next: getFacesData
          getFacesData:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                {
                  "Fn::Join":
                    [
                      ":",
                      [
                        "arn:aws:lambda:eu-west-1",
                        { "Ref": "AWS::AccountId" },
                        "function:${self:service}-${self:provider.stage}-getFacesData",
                      ],
                    ],
                }
              Payload:
                Input.$: "$"
            Next: blurAllFrames
          blurAllFrames:
            Type: Parallel
            Branches:
              - StartAt: blurAllFrames1
                States:
                  blurAllFrames1:
                    Type: Task
                    Resource: arn:aws:states:::lambda:invoke
                    Parameters:
                      FunctionName:
                        {
                          "Fn::Join":
                            [
                              ":",
                              [
                                "arn:aws:lambda:eu-west-1",
                                { "Ref": "AWS::AccountId" },
                                "function:${self:service}-${self:provider.stage}-blurAllFrames1",
                              ],
                            ],
                        }
                      Payload:
                        Input.$: "$"
                    End: true
              - StartAt: blurAllFrames2
                States:
                  blurAllFrames2:
                    Type: Task
                    Resource: arn:aws:states:::lambda:invoke
                    Parameters:
                      FunctionName:
                        {
                          "Fn::Join":
                            [
                              ":",
                              [
                                "arn:aws:lambda:eu-west-1",
                                { "Ref": "AWS::AccountId" },
                                "function:${self:service}-${self:provider.stage}-blurAllFrames2",
                              ],
                            ],
                        }
                      Payload:
                        Input.$: "$"
                    End: true
            Next: makeNewVideo
          makeNewVideo:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                {
                  "Fn::Join":
                    [
                      ":",
                      [
                        "arn:aws:lambda:eu-west-1",
                        { "Ref": "AWS::AccountId" },
                        "function:${self:service}-${self:provider.stage}-makeNewVideo",
                      ],
                    ],
                }
              Payload:
                Input.$: "$[0]"
            Next: notifySuccess
          notifySuccess:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName:
                {
                  "Fn::Join":
                    [
                      ":",
                      [
                        "arn:aws:lambda:eu-west-1",
                        { "Ref": "AWS::AccountId" },
                        "function:${self:service}-${self:provider.stage}-notifySuccess",
                      ],
                    ],
                }
              Payload:
                Input.$: "$"
            End: true
    Catch:
      - ErrorEquals: ["States.ALL"]
        Next: notifyError
        ResultPath: "$.error"
    Next: close
  notifyError:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName:
        {
          "Fn::Join":
            [
              ":",
              [
                "arn:aws:lambda:eu-west-1",
                { "Ref": "AWS::AccountId" },
                "function:${self:service}-${self:provider.stage}-notifyError",
              ],
            ],
        }
      Payload:
        Input.$: "$"
    Next: close
  close:
    Type: Succeed
